####平台环境###
centos 6.2 64位 nginx-1.2.1 php-5.3.14 mysql-5.5.25
阿里云2g内存实例，具体参数调整根据自己主机调整
里面也提到一部分修改建议
32位centos 512内存参考
http://jiyunjie.blog.51cto.com/5348020/907534
 
一、阿里云主机默认不挂载数据盘，先挂载
 
用  fdisk -l|grep Disk  查看你的系统有几块盘。
如：
Disk /dev/xvda: 160.0 GB, 160000000000 bytes
Disk /dev/xvdb: 160.0 GB, 160000000000 bytes
提示这个
disk /dev/xvdb doesn t contain a valid partition table
就是没有挂载，现在我们先挂载
1.   切换到root;
2.   运行命令 "fdisk /dev/xvdb";
3.   根据提示，依次输入 "n", "p", "1";
4.   然后 ，按两次回车;
5.   输入 "w", 当提示Syncing disks.时，表示已成功完成分区;
6.   输入 "mkfs.ext3 /dev/xvdb1" 格式化分区；这里要耐心等待
7.   输入 "mkdir /data0"建立挂载目录
8.   使用"mount /dev/xvdb1 /data0 "命令挂载分区后即可使用。
9.   vi /etc/fstab
按 i
最后一行写入
/dev/xvdb1    /data0    ext3         defaults     0 0
按esc 
输入:wq ，回车
操作完毕，完


#######1:jdk########
安装
(1)在usr下新建一个java文件夹
#mkdir /usr/java
(2)我用的WinSCP将JDK文件放入到/usr/java文件夹下
放入后，执行下面这个命令：
#cd /usr/java
#chmod a+x jdk-1.6.0_01-linux-i586.bin
使当前用户拥有对jdk-1.6.0_01-linux-i586.bin的执行权限;
(3)执行安装
#./jdk-1.6.0_01-linux-i586.bin
运行jdk-1.6.0_01-linux-i586.bin，这时会显示出JDK的安装许可协议，按空格翻页，最后程序会问你是不是同意上面的协议，当然同意啦，输入“yes”之后开始解压JDK到当前目录。此时屏幕上会显示解压的进度。
解压完成后 /usr/java目录下会新建一个名为“jdk-1.6”的目录，至此我们已经在CentOS下安装好了JDK。
三、配置
理论上来说JDK装好了以后就可以正常使用了，但是为了我们日后使用的方便，我们还要对它设置一下。与Windows下的JDK设置一样，我们通常需要设置一下环境变量。
我习惯修改/etc/profile来添加环境变量，/etc/profile中设置的环境变量就像Windows下环境变量中的系统变量一样，所有用户都可以使用。
用文本编辑器打开/etc/profile
# vi /etc/profile
在最后加入以下几行：
export JAVA_HOME=/opt/java/jdk-1.6
export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export PATH=$PATH:$JAVA_HOME/bin
这样我们就设置好了JDK，在centos下 source /etc/profile 就可以生效了


------------------------------------------
安装libunwind ./configure时候报错
关于在Linux装gcc没有kernel-headers包的问题
Error: Package: glibc-headers-2.12-1.80.el6_3.6.x86_64 (updates)
           Requires: kernel-headers >= 2.2.1
Error: Package: glibc-headers-2.12-1.80.el6_3.6.x86_64 (updates)
           Requires: kernel-headers
 You could try using --skip-broken to work around the problem
** Found 1 pre-existing rpmdb problem(s), 'yum check' output follows:
kernel-2.6.32-220.13.1.el6.x86_64 has missing requires of kernel-firmware >= ('0', '2.6.32', '220.13.1.el6')

解决：下载kernel-headers安装kernel-headers-3.7.9-2.fu2013.x86_64.rpm
	rpm -ivh kernel-headers-3.7.9-2.fu2013.x86_64.rpm

###:yum -y install gcc gcc-c++ make###

 继续安装libunwind
 ./configure 
 make 
 make install
 make clean
 
 #####安装google-perftools(gperftools-2.0.tar.gz) 64位系统先安装libunwind######
 tar -xzvf gperftools-2.0.tar.gz
 cd gperftools-2.0 
 ./configure
 make 
 make install
 make clean
 运行以下二行命令
echo "/usr/local/lib" > /etc/ld.so.conf.d/usr_local_lib.conf
/sbin/ldconfig

 #######安装nginx####### 
 错误：the HTTP rewrite module requires the PCRE library
 安装pcre-devel与openssl-devel解决问题 
yum -y install pcre-devel openssl openssl-devel

./configure --user=mynginx --group=mynginx --prefix=/opt/nginx-1.3.15 --with-http_stub_status_module --with-http_ssl_module --with-openssl= --with-http_addition_module --with-zlib= --with-google_perftools_module
make 
make install
make clean

接下来为google-perftools添加线程目录:
mkdir /tmp/tcmalloc
chmod 0777 /tmp/tcmalloc
修改/usr/local/nginx/conf/ncing.conf
在pid这行的下面添加
#pid        logs/nginx.pid;
google_perftools_profiles /tmp/tcmalloc;
重新启动nginx:
启动
sbin/nginx
--
/usr/local/nginx/sbin/nginx -t #测试配置  
/usr/local/nginx/sbin/nginx -q #测试配置时，只输出错误信息  
/usr/local/nginx/sbin/nginx -s stop #停止服务器  
/usr/local/nginx/sbin/nginx -s reload #重新加载配置  
--#######安装mysql#####
shell> groupadd mysql
shell> useradd -r -g mysql mysql
shell> cd /usr/local
shell> tar zxvf /path/to/mysql-VERSION-OS.tar.gz
shell> ln -s full-path-to-mysql-VERSION-OS mysql
shell> cd mysql
shell> chown -R mysql .
shell> chgrp -R mysql .
shell> scripts/mysql_install_db --user=mysql
shell> chown -R root .
shell> chown -R mysql data
# Next command is optional
shell> cp support-files/my-medium.cnf /etc/my.cnf
shell> bin/mysqld_safe --user=mysql &
# Next command is optional
shell> cp support-files/mysql.server /etc/init.d/mysql.server
 
 确保账户安全脚本 删除test库,默认用户等
   ./bin/mysql_secure_installation
 
 修改MySQL启动脚本（根据你的MySQL安装位置而定）：
vi /usr/local/mysql/bin/mysqld_safe
在# executing mysqld_safe的下一行，加上：
export LD_PRELOAD=/usr/local/lib/libtcmalloc.so
保存后退出，然后重启MySQL服务器。

5.使用验证lsof命令查看tcmalloc是否起效：
如lsof没有装，可yum安装
/usr/sbin/lsof -n | grep tcmalloc
如果发现以下信息，说明tcmalloc已经起效：
　　mysqld    10847   mysql  mem       REG        8,5  1203756   20484960 /usr/local/lib/libtcmalloc.so.0.0.0  
 
 
 #####---安装imagick---------
 tar zvxf ImageMagick-6.4.0-0.tar.gz
cd ImageMagick-6.4.0-0
./configure --prefix=/opt/ImageMagick-6.4.0 --with-quantum-depth=8 
make
make install
 【错误：
 	Can't locate ExtUtils/MakeMaker.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at Makefile.PL line 24.
BEGIN failed--compilation aborted at Makefile.PL line 24.
make[1]: *** [PerlMagick/Makefile] Error 2
make[1]: Leaving directory `/opt/soft/jmagick/ImageMagick-6.4.0'
make: *** [all] Error 2
 	环境也是centos6，且没有安装perl-CPAN，安装后解决
 	yum -y install perl-CPAN
 】
 
 cd PerlMagick && /usr/bin/perl Makefile.PL 
Can't locate ExtUtils/MakeMaker.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at Makefile.PL line 24.
BEGIN failed--compilation aborted at Makefile.PL line 24.
make[1]: *** [PerlMagick/Makefile] Error 2
make[1]: Leaving directory `/opt/soft/jmagick/ImageMagick-6.4.0'
make: *** [all] Error 2
可能是没安装perl-CPAN
yum -y install perl-CPAN
 
 #####=---jmagick=======
 ./configure --prefix=/opt/jmagick-6.4.0 --with-java-home=/usr/java/jdk1.6.0_43 -with-magick-home=/opt/ImageMagick-6.4.0
 make
 make install
 
 #####-----安装redis=====
 tar -xzvf redis-2.6.12.tar.gz
 make(或者编译时，使用tcmalloc加速，命令是make USE_TCMALLOC=yes)
 make PREFIX=/opt/redis-2.6.12 install
 cd /opt/soft/redis-2.6.12/utils
 ./install_server.sh
 执行install_server.sh脚本时候出错，找不到redis-server 因为我是通过设置prefix时候指定路径自定义安装的，该bin路径没有配置到profile的PATH中，故找不到，配置环境变量后即可
 export PATH=$PATH:$JAVA_HOME/bin:/opt/redis-2.6.12/bin
【错误信息如下：
 Welcome to the redis service installer
This script will help you easily set up a running redis server

Please select the redis port for this instance: [6379] 
Selecting default: 6379
Please select the redis config file name [/etc/redis/6379.conf] /opt/redis-2.6.12/redis_6379.conf
Selected default - /etc/redis/6379.conf
Please select the redis log file name [/var/log/redis_6379.log] 
Selected default - /var/log/redis_6379.log
Please select the data directory for this instance [/var/lib/redis/6379] 
Selected default - /var/lib/redis/6379
which: no redis-server in (/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/java/jdk1.6.0_43/bin:/root/bin)
Please select the redis executable path [] /opt/redis-2.6.12/bin
Mmmmm...  it seems like you don't have a redis executable. Did you run make install yet?
】
 
 再次执行  ./install_server.sh 报错
 解决：https://github.com/antirez/redis/pull/909
 Installing service...
./install_server.sh: line 178: update-rc.d: command not found
 exists, process is already running or crashed
Installation successful!
 
 解决办法：
 Fix install_server.sh for CentOS/RHEL
No milestone No one is assigned
The check to see if chkconfig exists is missing a space after !, so on CentOS/RHEL, the script will still try to use update-rc.d:

Installing service...
./install_server.sh: line 178: update-rc.d: command not found
This patch changes two occurrences (lines 162 and 176) of :

if [ !`which chkconfig` ] ; then 
to

if [ ! `which chkconfig` ] ; then 
意思说centos系统中执行时候，该脚本中 162 176的!`之间少了空格
vi修改加入空格后，再次执行成功
 
 
 
 #==cron
 CentOS下安装cron

今天到服务器上去添加cron任务时发现服务器竟然没有安装crond服务，在这里做一下安装和使用的记录。
1、安装

yum install vixie-cron crontabs
2、开启

/sbin/chkconfig --level 35 crond on  # 开机自启动
/sbin/service crond start
3、添加任务

crontab -e
4、crontab 格式
* *　 *　 *　 *　command

第1列表示分钟 1～59 每分钟用 * 或者 */1 表示
第2列表示小时 1～23（0表示0点）
第3列表示日期 1～31
第4列表示月份 1～12
第5列标识星期 0～6 （0表示星期天）
第6列要运行的命令
 cron 是linux的内置服务，但它不自动起来，可以用以下的方法启动、关闭这个服务：
/sbin/service crond start //启动服务
/sbin/service crond stop //关闭服务
/sbin/service crond restart //重启服务
/sbin/service crond reload //重新载入配置

查看crontab服务状态：service crond status

手动启动crontab服务：service crond start

查看crontab服务是否已设置为开机启动，执行命令：ntsysv

在CentOS系统中加入开机自动启动:chkconfig --level 35 crond on

CentOS系统 crontab命令

功能说明：设置计时器。

语法：crontab [-u <用户名称>][配置文件] 或 crontab [-u <用户名称>][-elr]

补充说明：cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使 用计时器的功能。其配置文件格式如下：Minute Hour Day Month DayOFWeek Command

参数： 
-e 　编辑该用户的计时器设置。 
-l 　列出该用户的计时器设置。 
-r 　删除该用户的计时器设置。 
-u<用户名称> 　指定要设定计时器的用户名称。
 
 
 